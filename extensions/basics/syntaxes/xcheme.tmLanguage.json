{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "XCHEME",
	"patterns": [
		{
			"include": "#directives"
		},
		{
			"include": "#punctuation-semicolon"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"punctuation-comma": {
			"name": "punctuation.separator.comma.xcheme",
			"match": ","
		},
		"punctuation-semicolon": {
			"name": "punctuation.terminator.statement.xcheme",
			"match": ";"
		},
		"literal-number": {
			"name": "constant.numeric.decimal.xcheme",
			"match": "\\b[01-9][0-9]*\\b"
		},
		"literal-identifier": {
			"name": "variable.parameter.xcheme",
			"match": "[_[:alpha:]][_[:alnum:]]*"
		},
		"literal-identity": {
			"patterns": [
				{
					"include": "#literal-number"
				},
				{
					"name": "constant.language.auto.xcheme",
					"match": "\\b(auto)\\b"
				}
			]
		},
		"literal-string": {
			"name": "string.quoted.single.xcheme",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.xcheme",
					"match": "\\\\."
				}
			]
		},
		"parameters-expression": {
			"begin": "\\<",
			"end": "\\>",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.angled.begin.xcheme"
				}
			},
			"endCaptures": {
				"0": {
					"name": "meta.brace.angled.end.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#literal-identifier"
				},
				{
					"include": "#punctuation-comma"
				},
				{
					"include": "#comments"
				}
			]
		},
		"arguments-expression": {
			"begin": "\\<",
			"end": "\\>",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.angled.begin.xcheme"
				}
			},
			"endCaptures": {
				"0": {
					"name": "meta.brace.angled.end.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#literal-identity"
				},
				{
					"include": "#literal-identifier"
				},
				{
					"include": "#punctuation-comma"
				},
				{
					"include": "#comments"
				}
			]
		},
		"directive-expression": {
			"patterns": [
				{
					"name": "keyword.control.as.xcheme",
					"match": "\\b(as)\\b"
				},
				{
					"include": "#arguments-expression"
				},
				{
					"include": "#expression"
				},
				{
					"include": "#comments"
				}
			]
		},
		"identified-directives": {
			"begin": "\\b(token|node)\\b",
			"end": "(?=\\;)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#directive-expression"
				}
			]
		},
		"aliased-directives": {
			"begin": "\\b(alias)\\b",
			"end": "(?=\\;)",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.alias.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#parameters-expression"
				},
				{
					"include": "#identified-directives"
				},
				{
					"include": "#comments"
				}
			]
		},
		"anonymous-directives": {
			"begin": "\\b(skip)\\b",
			"end": "(?=\\;)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"import-directives": {
			"begin": "\\b(import)\\b",
			"end": "(?=\\;)",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.import.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#literal-string"
				},
				{
					"include": "#comments"
				}
			]
		},
		"export-directives": {
			"begin": "\\b(export)\\b",
			"end": "(?=\\;)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.export.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#identified-directives"
				},
				{
					"include": "#aliased-directives"
				},
				{
					"include": "#reference-expression"
				},
				{
					"include": "#comments"
				}
			]
		},
		"condition-expression": {
			"begin": "\\b(then)\\b",
			"end": "(?<=\\b(else)\\b)|(?=\\)|\\;)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.conditional.if.xcheme"
				}
			},
			"patterns": [
				{
					"name": "keyword.control.conditional.else.xcheme",
					"match": "\\b(else)\\b"
				},
				{
					"include": "#expression"
				}
			]
		},
		"short-expressions": {
			"name": "keyword.operator.xcheme",
			"match": "\\||\\&|\\*|\\."
		},
		"control-expressions": {
			"name": "keyword.control.xcheme",
			"match": "\\b(or|and|not|opt|repeat|has)\\b"
		},
		"new-expressions": {
			"name": "keyword.operator.new.xcheme",
			"match": "\\b(place|append|prepend|pivot|symbol|scope|error|warn|set)\\b"
		},
		"direction-expressions": {
			"name": "storage.modifier.xcheme",
			"match": "\\b(next|left|right)\\b"
		},
		"transform-expressions": {
			"name": "keyword.control.transform.xcheme",
			"match": "\\b(uncase)\\b"
		},
		"test-expressions": {
			"name": "keyword.control.peek.xcheme",
			"match": "\\b(peek)\\b"
		},
		"constant-expression": {
			"name": "constant.language.xcheme",
			"match": "\\b(any|eos)\\b"
		},
		"map-expression": {
			"begin": "\\b(map)\\b",
			"end": "(?<=\\})",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.map.xcheme"
				}
			},
			"patterns": [
				{
					"begin": "\\{",
					"end": "\\}",
					"beginCaptures": {
						"0": {
							"name": "meta.brace.curly.begin.xcheme"
						}
					},
					"endCaptures": {
						"0": {
							"name": "meta.brace.curly.end.xcheme"
						}
					},
					"patterns": [
						{
							"include": "#directive-expression"
						},
						{
							"include": "#punctuation-comma"
						}
					]
				},
				{
					"include": "#comments"
				}
			]
		},
		"range-expression": {
			"begin": "\\b(from)\\b",
			"end": "(?<=\\b(to)\\b)",
			"beginCaptures": {
				"1": {
					"name": "constant.language.range.begin.xcheme"
				}
			},
			"patterns": [
				{
					"name": "constant.language.range.end.xcheme",
					"match": "\\b(to)\\b"
				},
				{
					"include": "#literal-string"
				}
			]
		},
		"reference-expression": {
			"name": "entity.name.variable.xcheme",
			"match": "[_[:alpha:]][_[:alnum:]]*"
		},
		"group-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "meta.brace.round.begin.xcheme"
				}
			},
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.end.xcheme"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"directives": {
			"patterns": [
				{
					"include": "#identified-directives"
				},
				{
					"include": "#aliased-directives"
				},
				{
					"include": "#anonymous-directives"
				},
				{
					"include": "#import-directives"
				},
				{
					"include": "#export-directives"
				}
			]
		},
		"expression": {
			"patterns": [
				{
					"include": "#condition-expression"
				},
				{
					"include": "#short-expressions"
				},
				{
					"include": "#control-expressions"
				},
				{
					"include": "#map-expression"
				},
				{
					"include": "#new-expressions"
				},
				{
					"include": "#direction-expressions"
				},
				{
					"include": "#transform-expressions"
				},
				{
					"include": "#test-expressions"
				},
				{
					"include": "#constant-expression"
				},
				{
					"include": "#range-expression"
				},
				{
					"include": "#literal-string"
				},
				{
					"include": "#reference-expression"
				},
				{
					"include": "#arguments-expression"
				},
				{
					"include": "#group-expression"
				},
				{
					"include": "#comments"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.xcheme",
					"begin": "//",
					"end": "(?=$)"
				},
				{
					"name": "comment.block.xcheme",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		}
	},
	"scopeName": "source.xcheme"
}